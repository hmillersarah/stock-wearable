[{"C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\index.js":"1","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\App.js":"3","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\Dashboard.js":"4","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\useToken.js":"5","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\Login.js":"6","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\Header.js":"7","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\index.js":"8","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\reportWebVitals.js":"9","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\App.js":"10","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\Dashboard.js":"11","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\Login.js":"12","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\useToken.js":"13","C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\Header.js":"14"},{"size":597,"mtime":1666486115982,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1666448391925,"results":"17","hashOfConfig":"16"},{"size":654,"mtime":1666486115982,"results":"18","hashOfConfig":"16"},{"size":12889,"mtime":1666500249546,"results":"19","hashOfConfig":"16"},{"size":604,"mtime":1666486115982,"results":"20","hashOfConfig":"16"},{"size":1911,"mtime":1666486115982,"results":"21","hashOfConfig":"16"},{"size":812,"mtime":1666486115982,"results":"22","hashOfConfig":"16"},{"size":597,"mtime":1666486115982,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1666448391925,"results":"25","hashOfConfig":"24"},{"size":662,"mtime":1666504183322,"results":"26","hashOfConfig":"24"},{"size":22804,"mtime":1666504223227,"results":"27","hashOfConfig":"24"},{"size":1911,"mtime":1666486115982,"results":"28","hashOfConfig":"24"},{"size":604,"mtime":1666486115982,"results":"29","hashOfConfig":"24"},{"size":961,"mtime":1666504183325,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pvym4x",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mquemi",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\index.js",[],"C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\App.js",["61","62","63"],"import './App.css';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, Routes, Route } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\nimport Login from './Login';\r\nimport useToken from './useToken';\r\n\r\nfunction App() {\r\n  const { token, removeToken, setToken } = useToken();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Stock Wearable App</h1>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Login setToken={setToken} />} />\r\n        <Route exact path=\"/dashboard\" element={<Dashboard token={token} setToken={setToken} />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\Dashboard.js",["64","65","66","67","68","69","70","71"],"import axios from 'axios';\r\nimport './Dashboard.css';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport useToken from './useToken';\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { token, removeToken, setToken } = useToken();\r\n    const [stockData, setStockData] = useState(null);\r\n    const [stockPrice, setStockPrice] = useState([]);\r\n    const [currStockPrice, setCurrStockPrice] = useState([]);\r\n    const [priceChange, setPriceChange] = useState();\r\n\r\n    const prevData = useLocation();\r\n    const userID = prevData.state.currUsername;\r\n    const userPass = prevData.state.currPassword;\r\n\r\n    const [newStock, setNewStock] = useState();\r\n    const [newFrequency, setNewFrequency] = useState();\r\n    const [newPercentChange, setNewPercentChange] = useState();\r\n    const [newAlert, setNewAlert] = useState();\r\n\r\n    const [stockToEdit, setStockToEdit] = useState();\r\n    const [newFreqAfterEdit, setNewFreqAfterEdit] = useState();\r\n    const [newPercentChangeAfterEdit, setNewPercentChangeAfterEdit] = useState();\r\n    const [newAlertAfterEdit, setNewAlertAfterEdit] = useState();\r\n\r\n    const [stockToDelete, setStockToDelete] = useState();\r\n\r\n    async function getData() {\r\n        const first = await axios({\r\n            method: \"GET\",\r\n            url: `/get-stocks/${userID}`,\r\n        }).then((response) => {\r\n            const res = response.data;\r\n            res.access_token && props.setToken(res.access_token);\r\n            let sentence = '';\r\n            for (let i = 0; i < res.length; i++) {\r\n                sentence = sentence + res[i][0] + ' ' + res[i][1] + ' ';\r\n            }\r\n            setStockData((sentence));\r\n            console.log(res);\r\n            return res;\r\n        });\r\n        let tempPrices = [];\r\n        let tempPriceSentence = '';\r\n        let tempCurrPrices = [];\r\n        let tempCurrPriceSentence = '';\r\n        for (let i = 0; i < first.length; i++) {\r\n            let currStock = first[i][0];\r\n            let currFreq = first[i][1];\r\n            const second = await axios({\r\n                method: \"GET\",\r\n                url: `/market/${currStock}/${currFreq}`,\r\n            }).then((response) => {\r\n                const res = response.data;\r\n                res.access_token && props.setToken(res.access_token);\r\n                tempPrices.push([currStock, res.toFixed(2)]);\r\n                tempPriceSentence += currStock + ': ' + res.toFixed(2) + ' ';\r\n            });\r\n            const third = await axios({\r\n                method: \"GET\",\r\n                url: `/stock/${currStock}`,\r\n            }).then((response) => {\r\n                const res = response.data;\r\n                res.access_token && props.setToken(res.access_token);\r\n                tempCurrPrices.push([currStock, res.toFixed(2)]);\r\n                tempCurrPriceSentence += currStock + ': ' + res.toFixed(2) + ' ';\r\n            });\r\n        }\r\n        //console.log(tempPrices);\r\n        setStockPrice(tempPriceSentence);\r\n        setCurrStockPrice(tempCurrPriceSentence);\r\n        let tempPriceChange = [];\r\n        let tempPriceChangeSentence = '';\r\n        for (let i = 0; i < tempCurrPrices.length; i++) {\r\n            let percent = (tempCurrPrices[i][1] - tempPrices[i][1]) / tempPrices[i][1] * 100;\r\n            tempPriceChange.push([tempCurrPrices[i][0], percent.toFixed(2)]);\r\n            tempPriceChangeSentence += tempCurrPrices[i][0] + ': ' + percent.toFixed(2) + ' ';\r\n            const fourth = await axios({\r\n                method: \"PUT\",\r\n                url: `/update-stock-price-percent-change/${userID}/${tempCurrPrices[i][0]}/${percent.toFixed(3)}`\r\n            });\r\n        }\r\n        setPriceChange(tempPriceChangeSentence);\r\n    }\r\n\r\n    async function handleClick(event) {\r\n        await axios({\r\n            method: \"POST\",\r\n            url: `/add-stock/${userID}/${newStock}/${newFrequency}/${newPercentChange}/${newAlert}`,\r\n        }).then((response) => {\r\n            const res = response.data;\r\n            res.access_token && props.setToken(res.access_token);\r\n            window.confirm('Stock has been added!');\r\n            window.location.reload();\r\n        }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    async function handleEditFreq(event) {\r\n        await axios({\r\n            method: \"PUT\",\r\n            url: `/update-stock/${userID}/${stockToEdit}/${newFreqAfterEdit}`,\r\n        }).then((response) => {\r\n            const res = response.data;\r\n            res.access_token && props.setToken(res.access_token);\r\n            window.confirm('Stock has been updated!');\r\n            window.location.reload();\r\n        }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    async function handleEditPercentChange(event) {\r\n        await axios({\r\n            method: \"PUT\",\r\n            url: `/update-percent-change/${userID}/${stockToEdit}/${newPercentChangeAfterEdit}`,\r\n        }).then((response) => {\r\n            const res = response.data;\r\n            res.access_token && props.setToken(res.access_token);\r\n            window.confirm('Percent change has been updated!');\r\n            window.location.reload();\r\n        }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    async function handleEditAlert(event) {\r\n        await axios({\r\n            method: \"PUT\",\r\n            url: `/update-alert/${userID}/${stockToEdit}/${newAlertAfterEdit}`,\r\n        }).then((response) => {\r\n            const res = response.data;\r\n            res.access_token && props.setToken(res.access_token);\r\n            window.confirm('Alert has been updated!');\r\n            window.location.reload();\r\n        }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    async function handleDelete(event) {\r\n        await axios({\r\n            method: \"DELETE\",\r\n            url: `/delete-stock/${userID}/${stockToDelete}`,\r\n        }).then((response) => {\r\n            const res = response.data;\r\n            res.access_token && props.setToken(res.access_token);\r\n            window.confirm('Stock has been deleted!');\r\n            window.location.reload();\r\n        }).catch((error) => {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <header>\r\n                <p>Username was: {userID}</p>\r\n                <p>Password was: {userPass}</p>\r\n                <h2>Stock Portfolio</h2>\r\n                <p>To get your stock details: </p><button onClick={getData}>Click me</button>\r\n                {stockData && <div>\r\n                    <p>Stocks for {userID}: {stockData}</p>\r\n                    <p>Past stock price: {stockPrice}</p>\r\n                    <p>Current stock price: {currStockPrice}</p>\r\n                    <p>Percent change: {priceChange}</p>\r\n                </div>}\r\n                <div>\r\n                    <h2>Add Another Stock to Follow</h2>\r\n                    <form>\r\n                        <label>\r\n                            <p>Stock Name (Official Abbreviation)</p>\r\n                            <input type=\"text\" onChange={e => setNewStock(e.target.value)} />\r\n                        </label>\r\n                        <label>\r\n                            <p>Baseline Comparison Date (1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y, 10y, ytd, max)</p>\r\n                            <input type=\"text\" onChange={e => setNewFrequency(e.target.value)} />\r\n                        </label>\r\n                        <label>\r\n                            <p>Minimum Percent Change to Warrant an Alert</p>\r\n                            <input type=\"text\" onChange={e => setNewPercentChange(e.target.value)} />\r\n                        </label>\r\n                        <label>\r\n                            <p>Alert Interval (seconds)</p>\r\n                            <input type=\"text\" onChange={e => setNewAlert(e.target.value)} />\r\n                        </label>\r\n                        <div>\r\n                            <button type=\"button\" onClick={handleClick}>Add Stock</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    <h2>Edit Stock Baseline Comparison Date</h2>\r\n                    <div>\r\n                        <form>\r\n                            <label>\r\n                                <p>Stock Whose Baseline Comparison Date You Want to Change</p>\r\n                                <input type=\"text\" onChange={e => setStockToEdit(e.target.value)} />\r\n                            </label>\r\n                            <label>\r\n                                <p>New Baseline Comparison Date</p>\r\n                                <input type=\"text\" onChange={e => setNewFreqAfterEdit(e.target.value)} />\r\n                            </label>\r\n                            <div>\r\n                                <button type=\"button\" onClick={handleEditFreq}>Edit Baseline Comparison Date</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2>Edit Stock Minimum Percent Change to Warrant an Alert</h2>\r\n                    <div>\r\n                        <form>\r\n                            <label>\r\n                                <p>Stock Whose Minimum Percent Change to Warrant an Alert You Want to Change</p>\r\n                                <input type=\"text\" onChange={e => setStockToEdit(e.target.value)} />\r\n                            </label>\r\n                            <label>\r\n                                <p>New Minimum Percent Change to Warrant an Alert</p>\r\n                                <input type=\"text\" onChange={e => setNewPercentChangeAfterEdit(e.target.value)} />\r\n                            </label>\r\n                            <div>\r\n                                <button type=\"button\" onClick={handleEditPercentChange}>Edit Percent Change to Warrant Alert</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2>Edit Stock Alert Interval</h2>\r\n                    <div>\r\n                        <form>\r\n                            <label>\r\n                                <p>Stock Whose Alert Interval You Want to Change</p>\r\n                                <input type=\"text\" onChange={e => setStockToEdit(e.target.value)} />\r\n                            </label>\r\n                            <label>\r\n                                <p>New Alert Interval</p>\r\n                                <input type=\"text\" onChange={e => setNewAlertAfterEdit(e.target.value)} />\r\n                            </label>\r\n                            <div>\r\n                                <button type=\"button\" onClick={handleEditAlert}>Edit Alert Interval</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2>Stop Following a Stock</h2>\r\n                    <div>\r\n                        <form>\r\n                            <label>\r\n                                <p>Stock to Unfollow</p>\r\n                                <input type=\"text\" onChange={e => setStockToDelete(e.target.value)} />\r\n                            </label>\r\n                            <div>\r\n                                <button type=\"button\" onClick={handleDelete}>Unfollow Stock</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <Header token={removeToken} />\r\n            </header >\r\n        </div >\r\n    );\r\n}","C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\useToken.js",[],"C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\Login.js",[],"C:\\Users\\BZHU-X1\\Documents\\Github\\stock-wearable\\frontend\\src\\Header.js",[],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\index.js",[],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\App.js",["72","73","74"],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\Dashboard.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\Login.js",[],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\useToken.js",[],"C:\\Users\\BZHU-X1\\Documents\\GitHub\\stock-wearable\\frontend\\src\\Header.js",[],{"ruleId":"90","severity":1,"message":"91","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"94","line":9,"column":18,"nodeType":"92","messageId":"93","endLine":9,"endColumn":29},{"ruleId":"90","severity":1,"message":"95","line":10,"column":9,"nodeType":"92","messageId":"93","endLine":10,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":10,"column":11,"nodeType":"92","messageId":"93","endLine":10,"endColumn":19},{"ruleId":"90","severity":1,"message":"96","line":12,"column":13,"nodeType":"92","messageId":"93","endLine":12,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":12,"column":33,"nodeType":"92","messageId":"93","endLine":12,"endColumn":41},{"ruleId":"90","severity":1,"message":"98","line":56,"column":19,"nodeType":"92","messageId":"93","endLine":56,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":59,"column":21,"nodeType":"101","messageId":"102","endLine":64,"endColumn":14},{"ruleId":"90","severity":1,"message":"103","line":65,"column":19,"nodeType":"92","messageId":"93","endLine":65,"endColumn":24},{"ruleId":"99","severity":1,"message":"104","line":68,"column":21,"nodeType":"101","messageId":"102","endLine":73,"endColumn":14},{"ruleId":"90","severity":1,"message":"105","line":84,"column":19,"nodeType":"92","messageId":"93","endLine":84,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"94","line":9,"column":18,"nodeType":"92","messageId":"93","endLine":9,"endColumn":29},{"ruleId":"90","severity":1,"message":"95","line":10,"column":9,"nodeType":"92","messageId":"93","endLine":10,"endColumn":17},{"ruleId":"90","severity":1,"message":"106","line":26,"column":8,"nodeType":"92","messageId":"93","endLine":26,"endColumn":13},{"ruleId":"90","severity":1,"message":"107","line":27,"column":8,"nodeType":"92","messageId":"93","endLine":27,"endColumn":17},{"ruleId":"90","severity":1,"message":"108","line":28,"column":8,"nodeType":"92","messageId":"93","endLine":28,"endColumn":17},{"ruleId":"90","severity":1,"message":"109","line":29,"column":8,"nodeType":"92","messageId":"93","endLine":29,"endColumn":22},{"ruleId":"90","severity":1,"message":"110","line":30,"column":8,"nodeType":"92","messageId":"93","endLine":30,"endColumn":17},{"ruleId":"90","severity":1,"message":"111","line":31,"column":8,"nodeType":"92","messageId":"93","endLine":31,"endColumn":16},{"ruleId":"90","severity":1,"message":"112","line":32,"column":8,"nodeType":"92","messageId":"93","endLine":32,"endColumn":13},{"ruleId":"90","severity":1,"message":"113","line":33,"column":20,"nodeType":"92","messageId":"93","endLine":33,"endColumn":30},{"ruleId":"90","severity":1,"message":"114","line":33,"column":32,"nodeType":"92","messageId":"93","endLine":33,"endColumn":53},{"ruleId":"90","severity":1,"message":"95","line":37,"column":11,"nodeType":"92","messageId":"93","endLine":37,"endColumn":19},{"ruleId":"90","severity":1,"message":"96","line":39,"column":13,"nodeType":"92","messageId":"93","endLine":39,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":39,"column":33,"nodeType":"92","messageId":"93","endLine":39,"endColumn":41},{"ruleId":"90","severity":1,"message":"98","line":105,"column":19,"nodeType":"92","messageId":"93","endLine":105,"endColumn":25},{"ruleId":"90","severity":1,"message":"103","line":115,"column":19,"nodeType":"92","messageId":"93","endLine":115,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":239,"column":8,"nodeType":"117","endLine":239,"endColumn":28,"suggestions":"118"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'removeToken' is assigned a value but never used.","'navigate' is assigned a value but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'second' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'tempPriceSentence'.","ArrowFunctionExpression","unsafeRefs","'third' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'tempCurrPriceSentence'.","'fourth' is assigned a value but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'GridColDef' is defined but never used.","'GridValueGetterParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["119"],{"desc":"120","fix":"121"},"Update the dependencies array to be: [getData, stockTableFinished]",{"range":"122","text":"123"},[9330,9350],"[getData, stockTableFinished]"]