{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\r\n     * Disabled `MenuItem` would trigger `click` event\r\n     * after imperative `.click()` call on HTML element.\r\n     * Also, click is triggered in testing environment as well.\r\n     */\n    if (disabled) {\n      return;\n    }\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (column.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","map":{"version":3,"names":["React","PropTypes","MenuItem","useGridApiContext","useGridRootProps","gridVisibleColumnDefinitionsSelector","jsx","_jsx","HideGridColMenuItem","props","column","onClick","apiRef","rootProps","timeoutRef","useRef","visibleColumns","columnsWithMenu","filter","col","disableColumnMenu","disabled","length","toggleColumn","useCallback","event","current","setTimeout","setColumnVisibility","field","useEffect","clearTimeout","disableColumnSelector","hideable","children","getLocaleText","process","env","NODE_ENV","propTypes","object","isRequired","func"],"sources":["C:/Users/BZHU-X1/Documents/GitHub/stock-wearable/frontend/node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js"],"sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\r\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\r\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst HideGridColMenuItem = props => {\r\n  const {\r\n    column,\r\n    onClick\r\n  } = props;\r\n  const apiRef = useGridApiContext();\r\n  const rootProps = useGridRootProps();\r\n  const timeoutRef = React.useRef();\r\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\r\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\r\n\r\n  const disabled = columnsWithMenu.length === 1;\r\n  const toggleColumn = React.useCallback(event => {\r\n    /**\r\n     * Disabled `MenuItem` would trigger `click` event\r\n     * after imperative `.click()` call on HTML element.\r\n     * Also, click is triggered in testing environment as well.\r\n     */\r\n    if (disabled) {\r\n      return;\r\n    }\r\n\r\n    onClick(event); // time for the transition\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\r\n    }, 100);\r\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\r\n  React.useEffect(() => {\r\n    return () => clearTimeout(timeoutRef.current);\r\n  }, []);\r\n\r\n  if (rootProps.disableColumnSelector) {\r\n    return null;\r\n  }\r\n\r\n  if (column.hideable === false) {\r\n    return null;\r\n  }\r\n\r\n  return /*#__PURE__*/_jsx(MenuItem, {\r\n    onClick: toggleColumn,\r\n    disabled: disabled,\r\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\r\n  });\r\n};\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  column: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n} : void 0;\r\nexport { HideGridColMenuItem };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,SAASC,oCAAoC,QAAQ,iCAAiC;AACtF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAE/C,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;EACnC,MAAM;IACJC,MAAM;IACNC;EACF,CAAC,GAAGF,KAAK;EACT,MAAMG,MAAM,GAAGT,iBAAiB,EAAE;EAClC,MAAMU,SAAS,GAAGT,gBAAgB,EAAE;EACpC,MAAMU,UAAU,GAAGd,KAAK,CAACe,MAAM,EAAE;EACjC,MAAMC,cAAc,GAAGX,oCAAoC,CAACO,MAAM,CAAC;EACnE,MAAMK,eAAe,GAAGD,cAAc,CAACE,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,iBAAiB,KAAK,IAAI,CAAC,CAAC,CAAC;;EAEtF,MAAMC,QAAQ,GAAGJ,eAAe,CAACK,MAAM,KAAK,CAAC;EAC7C,MAAMC,YAAY,GAAGvB,KAAK,CAACwB,WAAW,CAACC,KAAK,IAAI;IAC9C;AACJ;AACA;AACA;AACA;IACI,IAAIJ,QAAQ,EAAE;MACZ;IACF;IAEAV,OAAO,CAACc,KAAK,CAAC,CAAC,CAAC;;IAEhBX,UAAU,CAACY,OAAO,GAAGC,UAAU,CAAC,MAAM;MACpCf,MAAM,CAACc,OAAO,CAACE,mBAAmB,CAAClB,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmB,KAAK,EAAE,KAAK,CAAC;IACnF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACjB,MAAM,EAAEF,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACmB,KAAK,EAAElB,OAAO,EAAEU,QAAQ,CAAC,CAAC;EACvErB,KAAK,CAAC8B,SAAS,CAAC,MAAM;IACpB,OAAO,MAAMC,YAAY,CAACjB,UAAU,CAACY,OAAO,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIb,SAAS,CAACmB,qBAAqB,EAAE;IACnC,OAAO,IAAI;EACb;EAEA,IAAItB,MAAM,CAACuB,QAAQ,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,OAAO,aAAa1B,IAAI,CAACL,QAAQ,EAAE;IACjCS,OAAO,EAAEY,YAAY;IACrBF,QAAQ,EAAEA,QAAQ;IAClBa,QAAQ,EAAEtB,MAAM,CAACc,OAAO,CAACS,aAAa,CAAC,sBAAsB;EAC/D,CAAC,CAAC;AACJ,CAAC;AAEDC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG9B,mBAAmB,CAAC+B,SAAS,GAAG;EACtE;EACA;EACA;EACA;EACA7B,MAAM,EAAET,SAAS,CAACuC,MAAM,CAACC,UAAU;EACnC9B,OAAO,EAAEV,SAAS,CAACyC,IAAI,CAACD;AAC1B,CAAC,GAAG,KAAK,CAAC;AACV,SAASjC,mBAAmB"},"metadata":{},"sourceType":"module"}