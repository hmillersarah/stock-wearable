{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const error = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: error != null,\n    componentProps: error,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","map":{"version":3,"names":["_extends","React","PropTypes","useGridApiContext","useGridLogger","GridMainContainer","ErrorBoundary","useGridRootProps","jsx","_jsx","GridErrorHandler","props","children","apiRef","logger","rootProps","error","current","state","hasError","componentProps","api","render","errorProps","_rootProps$components","components","ErrorOverlay","componentsProps","errorOverlay","process","env","NODE_ENV","propTypes","node"],"sources":["C:/Users/BZHU-X1/Documents/GitHub/stock-wearable/frontend/node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\r\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\r\nimport { GridMainContainer } from '../containers/GridMainContainer';\r\nimport { ErrorBoundary } from '../ErrorBoundary';\r\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nfunction GridErrorHandler(props) {\r\n  const {\r\n    children\r\n  } = props;\r\n  const apiRef = useGridApiContext();\r\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\r\n  const rootProps = useGridRootProps();\r\n  const error = apiRef.current.state.error;\r\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\r\n    hasError: error != null,\r\n    componentProps: error,\r\n    api: apiRef,\r\n    logger: logger,\r\n    render: errorProps => {\r\n      var _rootProps$components;\r\n\r\n      return /*#__PURE__*/_jsx(GridMainContainer, {\r\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\r\n      });\r\n    },\r\n    children: children\r\n  });\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  children: PropTypes.node\r\n} : void 0;\r\nexport { GridErrorHandler };"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAE/C,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAC/B,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,MAAME,MAAM,GAAGV,iBAAiB,EAAE;EAClC,MAAMW,MAAM,GAAGV,aAAa,CAACS,MAAM,EAAE,kBAAkB,CAAC;EACxD,MAAME,SAAS,GAAGR,gBAAgB,EAAE;EACpC,MAAMS,KAAK,GAAGH,MAAM,CAACI,OAAO,CAACC,KAAK,CAACF,KAAK;EACxC,OAAO,aAAaP,IAAI,CAACH,aAAa,EAAE;IACtCa,QAAQ,EAAEH,KAAK,IAAI,IAAI;IACvBI,cAAc,EAAEJ,KAAK;IACrBK,GAAG,EAAER,MAAM;IACXC,MAAM,EAAEA,MAAM;IACdQ,MAAM,EAAEC,UAAU,IAAI;MACpB,IAAIC,qBAAqB;MAEzB,OAAO,aAAaf,IAAI,CAACJ,iBAAiB,EAAE;QAC1CO,QAAQ,EAAE,aAAaH,IAAI,CAACM,SAAS,CAACU,UAAU,CAACC,YAAY,EAAE1B,QAAQ,CAAC,CAAC,CAAC,EAAEuB,UAAU,EAAE,CAACC,qBAAqB,GAAGT,SAAS,CAACY,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,qBAAqB,CAACI,YAAY,CAAC;MACpM,CAAC,CAAC;IACJ,CAAC;IACDhB,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AAEAiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGrB,gBAAgB,CAACsB,SAAS,GAAG;EACnE;EACA;EACA;EACA;EACApB,QAAQ,EAAEV,SAAS,CAAC+B;AACtB,CAAC,GAAG,KAAK,CAAC;AACV,SAASvB,gBAAgB"},"metadata":{},"sourceType":"module"}