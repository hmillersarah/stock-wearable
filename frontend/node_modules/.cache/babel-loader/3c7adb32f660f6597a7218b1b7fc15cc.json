{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    fontWeight: theme.typography.fontWeightMedium\n  };\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","styled","isOverflown","getDataGridUtilityClass","useGridRootProps","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","GridColumnHeaderTitleRoot","name","slot","overridesResolver","props","styles","columnHeaderTitle","theme","textOverflow","overflow","whiteSpace","fontWeight","typography","fontWeightMedium","ColumnHeaderInnerTitle","forwardRef","ref","className","other","rootProps","GridColumnHeaderTitle","_rootProps$components","label","description","columnWidth","titleRef","useRef","tooltip","setTooltip","useState","useEffect","current","isOver","components","BaseTooltip","title","componentsProps","baseTooltip","children","process","env","NODE_ENV","propTypes","number","isRequired","node","string"],"sources":["C:/Users/BZHU-X1/Documents/GitHub/stock-wearable/frontend/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"className\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { isOverflown } from '../../utils/domUtils';\r\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\r\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['columnHeaderTitle']\r\n  };\r\n  return composeClasses(slots, getDataGridUtilityClass, classes);\r\n};\r\n\r\nconst GridColumnHeaderTitleRoot = styled('div', {\r\n  name: 'MuiDataGrid',\r\n  slot: 'ColumnHeaderTitle',\r\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\r\n})(({\r\n  theme\r\n}) => ({\r\n  textOverflow: 'ellipsis',\r\n  overflow: 'hidden',\r\n  whiteSpace: 'nowrap',\r\n  fontWeight: theme.typography.fontWeightMedium\r\n}));\r\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\r\n  const {\r\n    className\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const rootProps = useGridRootProps();\r\n  const ownerState = {\r\n    classes: rootProps.classes\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\r\n    ref: ref,\r\n    className: clsx(classes.root, className)\r\n  }, other));\r\n});\r\n\r\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\r\nfunction GridColumnHeaderTitle(props) {\r\n  var _rootProps$components;\r\n\r\n  const {\r\n    label,\r\n    description,\r\n    columnWidth\r\n  } = props;\r\n  const rootProps = useGridRootProps();\r\n  const titleRef = React.useRef(null);\r\n  const [tooltip, setTooltip] = React.useState('');\r\n  React.useEffect(() => {\r\n    if (!description && titleRef && titleRef.current) {\r\n      const isOver = isOverflown(titleRef.current);\r\n\r\n      if (isOver) {\r\n        setTooltip(label);\r\n      } else {\r\n        setTooltip('');\r\n      }\r\n    }\r\n  }, [titleRef, columnWidth, description, label]);\r\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\r\n    title: description || tooltip\r\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\r\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\r\n      ref: titleRef,\r\n      children: label\r\n    })\r\n  }));\r\n}\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  columnWidth: PropTypes.number.isRequired,\r\n  description: PropTypes.node,\r\n  label: PropTypes.string.isRequired\r\n} : void 0;\r\nexport { GridColumnHeaderTitle };"],"mappings":"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"},"metadata":{},"sourceType":"module"}